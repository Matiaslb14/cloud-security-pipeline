name: Terraform Pipeline

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  workflow_dispatch: {}

# Evita carreras (y no se cruza con destroy)
concurrency:
  group: terraform
  cancel-in-progress: true

# Permisos mínimos para usar el repo
permissions:
  contents: read

jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "0"
      TF_VAR_my_ip_cidr: ${{ secrets.MY_IP_CIDR }}
      TF_VAR_key_pair_name: ${{ secrets.KEY_PAIR_NAME }}
      TF_VAR_alarm_email: ${{ secrets.ALARM_EMAIL }}
      TF_VAR_aws_region: us-east-1
      # Déjalo si quieres forzar el tipo; o elimínalo para usar el default de variables.tf
      TF_VAR_instance_type: "t3.micro"

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TF_VAR_aws_region }}

      - name: Terraform Init (reconfigure backend)
        run: terraform init -no-color -input=false -reconfigure

      - name: Terraform Plan
        run: terraform plan -no-color -input=false -out=tfplan

      - name: Terraform Apply
        run: terraform apply -no-color -input=false -auto-approve tfplan

      # Opcional: muestra IP/DNS en el resumen del job
      - name: Show outputs (IP / DNS)
        if: ${{ success() }}
        run: |
          {
            echo "## Terraform Outputs"
            echo ""
            echo "- **Public IP**: \`$(terraform output -raw instance_public_ip)\`"
            echo "- **Public DNS**: \`$(terraform output -raw instance_public_dns)\`"
            echo ""
            echo "**SSH:** \`$(terraform output -raw ssh_command)\`"
          } >> "$GITHUB_STEP_SUMMARY" || true
